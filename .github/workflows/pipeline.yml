name: Fitness Tracker CI/CD

on:
  pull_request:
    branches:
  workflow_dispatch:

jobs:

  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build and Run Unit Tests with Maven
        run: mvn -B clean package -DskipTests=true

  test:
    name: Unit Test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build and Run Unit Tests with Maven
        run: mvn -B clean test -Dtest=!FitnessTrackerApplication*

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          generate-summary: true
          fail-if-coverage-less-than: 80
          fail-on-coverage-decrease: true

      - name: Log Coverage Percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit and Push the Badge
        uses: Endbug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'commit badge'
          add: '*.svg'

      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco

      - name: Comment on PR with coverage percentages
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          REPORT=$(<badges/coverage-summary.json)
          COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
          BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
          NEWLINE=$'\n'
          BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
          gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}